												
													 ## ##     ####	  ##########                  
												   ## 	  ##	##		  ##				 
												  ##			##		  ##
												  ## 			##		  ##				 
												  ##    ####	##		  ##
												   ##     ##	##		  ##
													 ## ###    ####       ##               
																						 
#############  version  #############
git version
Afficher la version git.

#############  config  #################
git config --global user.name "[nom]"
git config --global user.email "[adresse email]"
git config --list
git config --global --list
Configurer et editer les informations de l'utilisateur pour tous les dépôts locaux

#############  init  ################
git init
initialiser un projet git,se positionner dans le repetoir du projet, clic droit >> Git Bash Here

#############  add  #################
git add Commandes_Git
git add .
Ajouter les modification pour faire le commit. utilisé avec deux options soit avec le nom 
du fichier modifié ou un point (.) pour tt les fichiers.

#############  status  ##############
git status
Liste tous les nouveaux fichiers et les fichiers modifiés à commiter

#############  log  #################
git log
Affiche l'historique des versions pour la branche courante
git log --oneline
Affiche l'historique de façon plius lisible
git log --graph
Affiche l'historique sous forme de graphe

############  show  #################
git show sha1
Affiche l'historique d'un commit

#############  diff ################
git diff
Montre les différences de fichier entre la version indexée et la dernière
version

#############  commit  ##############
git commit -m"Ajout du fichier Commandes_Git"
Permet de prendre une image de l'état du projet avant de pousser 

#############  remote ###############
git remote add <name> <url>    

Créer une connexion avec un dépôt distant. Après avoir ajouté un dépôt distant,
vous pourrez utiliser <nom> comme raccourcis pratique vers <url> dans d'autres commandes Git.

git remote -v
Afficher les connexion distantes

git remote rm <name>
Supprimer la connexion avec le dépôt distant nommé <nom>.

git remote rename <old-name> <new-name>
Renommer la connexion distante <ancien-nom> en <nouveau-nom>.

#############  push  ################
git push [alias] [branche]
git push
Pousser le commit vers le depôt distant

git push origin --delete nom_branche_distante
supprimer une branche distante

git push --set-upstream origin ma_branche 
Créer une branche distante ma_branche

#############  fetch   ##############
git fetch
Récupère tout l'historique du dépôt distant mais ne se positionne pas dessus .



git fetch --prune 
Met à jours l'historique des branches distant déja supprimer et visible en local. 



#############  pull  ################
git pull = git fetch + positionner sur ce dernier commit récupérer du distant
Récupère tout l'historique et les modification du dépôt distant et mis à jours le depôt local.

#############  branch  ##############
git branch [nom-de-branche]
Crée une nouvelle branche

git branch
Liste toutes les branches locales dans le dépôt courant

git checkout [nom-de-branche]
Bascule sur la branche spécifiée et met à jour le répertoire de travail.

git branch -d [nom-de-branche]
Supprime la branche spécifiée

git branch -D [nom_de_la_branche]
Supprimer la branche située sur le dépôt distant.

git merge [nom-de-branche]
Combine dans la branche courante l'historique de la branche spécifiée

git branch -a 
Afficher la liste des branches distante et local. 

#############  checkout  ############
git checkout nom_branche ou id_sha1
se positionner sur la nouvelle branche

git checkout -b branch_authentification
créer et se positionner sur une branche au mme temps

#############  merge ################
git merge [nom-de-depot]/[branche]
Fusionne la branche du dépôt dans la branche locale courante. 

git merge ma_branche
exp: faire un merge de la branche ma_branche dans master: se positionner dans master puis faire $ git merge ma_branche 

#############  rebase ###############

#############  restore ###############
git restore [chemin vers le fichier qu'on veut restorer pour annuler des modif locales]
git restore .
Restore tous les fichiers
############ Annuler un commit ############
git reset --hard HEAD~1
###########################################

#############  tag  ################
git tag 
Pour afficher les tags (etiquette <=> version(release))

git tag Nomdutag -m"monmessage"
Pour créer un tag (étiquette <=> version(release)) dans une branche

git push origin Nomdutag
Pour pousser le tag Nomdutag (etiquette <=> version(release)) vers github.

git push --tags 
Pour pousser tout les tags qui sont en local

git tag -d monTag 
Pour supprimer un tag loccal  monTag

git push --delete origin monTag
ou bien 
git push origin :refs/tags/monTag
Pour supprimer un tag distant monTag

#############  commandes pour deplyer une application sur Android Studio et palystore ################
#############   Android Studio  ################

1. Dans android studio, il faut passer en mode release.
2. Générer l'APK: Build->Build APKS-> Build APK
3. se positioner avec CMD/gitbash sur le répertoir ou l'APK été généré exp: C:\Users\User\AndroidStudioProjects\MyAppCrechesV2\MyAppCreche\app\build\outputs\apk\release
4. Faire attention pour cette étape: Génerer une seule fois les certeficats et surtout sauvegarder le certéficat et le mot de passe (pour les nouvelles mise à jours ou regénération d'APK, il ne faut pas relancer cette commande) :
   keytool -genkey -v -keystore my-release-key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias my-alias
5. Signer l'APK généré avec la commande: jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key1.jks app-release-unsigned.apk my-alias  
6. Ziper L'APK avec la commande: /c/Users/User/AppData/Local/Android/Sdk/build-tools/29.0.3/zipalign.exe -v 4 app-release-unsigned.apk MonAPK0606.apk  
7. Verifier la signature de l'APK avec la commande: /c/Users/User/AppData/Local/Android/Sdk/build-tools/29.0.3/apksigner.bat verify MonAPK0606.apk.

#############   PlayStore  ################
Suivre une vidéo déja exploiter par des utilisateur pour déployer dans playStor:
exp: https://youtu.be/0naC_42iIxQ